version: "3.7"

services:

  db:
    image: postgres:alpine
    container_name: db
    restart: unless-stopped
    user: postgres
    ports:
      - 5433:5432
    volumes:
      - data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
    # links:
    #   - pgadmin
    profiles: [ "database", "all" ]
  ##
  # db-setup:
  #   image: node:12-alpine
  #   container_name: server_db_setup
  #   depends_on:
  #     - db
  #     - server
  #   volumes:
  #     - ./app/server/prisma:/app/prisma
  #     - ./app/server/node_modules:/app/node_modules
  #     - ./app/server/.env:/app/.env
  #   restart: "no"
  #   entrypoint:
  #     [
  #       "sh",
  #       "-c",
  #       "sleep 5 && npx prisma migrate dev -n setup --schema /app/prisma/schema.prisma" # "sleep 5 && ls -la"
  #     ]
  server:
    image: node:12-alpine
    container_name: server
    depends_on:
      - db
    ports:
      - 3000:3000
    volumes:
      - ./app/server:/usr/app/server
    profiles: [ "all" ]
    command: [ "sh", "-c", "cd /usr/app/server && yarn start" ]
  # ##
  # client:
  #   build:
  #     context: app/client
  #     target: development
  #   container_name: client
  #   env_file:
  #     - .env
  #   depends_on:
  #     - server
  #   ports:
  #     - 3333:3333
  #   volumes:
  #     - /app/client/node_modules
  #     - ./app/client/:/usr/app/client/
  #   command: [ "npm", "run", "start" ]
  #   profiles: [ "all" ]
  #   environment:
  #     CHOKIDAR_USEPOLLING: "true" # seems like this enables hot reloading https://stackoverflow.com/questions/44643045/running-development-server-with-create-react-app-inside-of-a-docker-container
  #   links:
  #     - server
  # ##
  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: postgres-pgadmin
  #   restart: unless-stopped
  #   # networks:
  #   #   rede-psql:
  #   #     ipv4_address: 10.0.0.21
  #   ports:
  #     - 5444:5444
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: postgres@email.com
  #     PGADMIN_DEFAULT_PASSWORD: postgres
  #   profiles: [ "database", "all" ]
  # ##

volumes:
  postgres:

  data:
